FROM python:3.11.6-slim-bookworm as base

# Install poetry
RUN pip install pipx
RUN python3 -m pipx ensurepath
RUN pipx install poetry
ENV PATH="/root/.local/bin:$PATH"
ENV PATH=".venv/bin/:$PATH"

# https://python-poetry.org/docs/configuration/#virtualenvsin-project
ENV POETRY_VIRTUALENVS_IN_PROJECT=true

FROM base as dependencies
WORKDIR /home/worker/app
COPY pyproject.toml poetry.lock ./

RUN poetry install --extras "ui vector-stores-qdrant llms-ollama embeddings-ollama"

FROM base as app

ENV PYTHONUNBUFFERED=1
ENV PORT=8080
EXPOSE 8080

WORKDIR /home/worker/app

# Fix permissions, for k8s pod usage
RUN chgrp -R 0 /home/worker/app && chmod -R g=u /home/worker/app
RUN chown -R 1001:0 /home/worker/app && chmod 775 /home/worker/app

RUN mkdir /.cache
RUN chgrp -R 0 /.cache && chmod -R g=u /.cache
RUN chown -R 1001:0 /.cache && chmod 775 /.cache
RUN mkdir local_data
RUN chgrp -R 0 local_data && chmod -R g=u local_data
RUN chown -R 1001:0 local_data && chmod 775 local_data
RUN mkdir models
RUN chgrp -R 0 models && chmod -R g=u models
RUN chown -R 1001:0 models && chmod 775 models

COPY --chown=1001:0 --from=dependencies /home/worker/app/.venv/ .venv
COPY --chown=1001:0 private_gpt/ private_gpt
COPY --chown=1001:0 fern/ fern
COPY --chown=1001:0 *.yaml *.md ./
COPY --chown=1001:0 scripts/ scripts

ENV PYTHONPATH="$PYTHONPATH:/private_gpt/"

USER 1001
ENTRYPOINT python -m private_gpt
